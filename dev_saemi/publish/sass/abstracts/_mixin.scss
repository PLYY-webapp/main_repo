@mixin position($x, $xvalue, $y:null, $yvalue:null){
    position: absolute;
    #{$x}:$xvalue;
    #{$y}:$yvalue;
    
    @if $xvalue == 50% and $yvalue == 50% {
        transform:translate(-50%,-50%);
    }@else if $xvalue == 50% {
        transform:translateX(-50%);
    }@else if $yvalue == 50% {
        transform:translateY(-50%);
    }
}

// 배경이미지
@mixin bg($imgfile, $x:null, $y:null, $bgcolor:null, $width:null, $height:null){
    background: url(#{$imgurl}#{$imgfile}) no-repeat $x $y $bgcolor;
    background-size: $width $height;
}

// badge
// 클래스명, 둥근모서리, 높이, 폰트크기, 컬러, 보더컬러, 배경색, 패딩탑, 패딩바텀
@each $class, $br, $hig, $fs, $color, $borderColor, $bg, $padTop, $padLeft in $badgeSetting {
    .badge.#{$class} {
        border-radius: rem($br);
        height: rem($hig);
        font-size: rem($fs);
        color: $color;
        border: 1px solid $borderColor;
        background-color: $bg;
        padding: rem($padTop) rem($padLeft);
    }
}

// badges
// 플리 혹은 큐레이터 카드 이미지 위에 보이는 태그리스트들에만 사용하는 용도
@each $class, $br, $hig, $fs, $color, $borderColor, $bg, $padTop, $padLeft in $badgesSetting {
    .badges.#{$class} {
        border-radius: rem($br);
        height: rem($hig);
        font-size: rem($fs);
        color: $color;
        border: 1px solid $borderColor;
        background-color: $bg;
        padding: rem($padTop) rem($padLeft);
        margin-right: rem(4);
    }
}

// badge
// 클래스명, 높이, 패딩위아래, 패딩 좌우, 폰트사이즈, 배경색, 폰트색, 보더radius, 보더색
@each $class, $hig, $padTop, $padLeft, $fs, $bg, $color, $br, $borderColor in $buttonSetting {
    .btn.#{$class} {
        height: rem($hig);
        padding: rem($padTop) rem($padLeft);
        font-size: rem($fs);
        background-color: $bg;
        color: $color;
        border-radius: rem($br);
        border: 1px solid $borderColor;
    }
}